@using Client.BuildingBlocks.Http
@using Client.BuildingBlocks.Modals.Invitations
@using Microsoft.AspNetCore.SignalR.Client
@inject IModalService modalService
@inject HttpClientService httpClientService

<div class="h-full w-full grid grid-rows-[90px_2fr] gap-y-6">
    <div class="mt-3 flex flex-row gap-x-3 justify-between">
        <div class="mt-1 self-end">
            <h3 class="text-2xl">Your Accelerator Admin Dashboard</h3>
            <h5 class="text-lg">Stay connected with your start fellowship founders</h5>
        </div>
        <div class="flex flex-row ml-5 gap-x-3">
            <div class="w-[190px] rounded rounded-b-none border-orange border-b-[6px] bg-grey-200 p-1 flex flex-row">
                <div class="self-end">
                    <h3 class="text-xl font-medium">@fellowCount</h3>
                    <h3>Supported Fellows</h3>
                </div>
            </div>
            <div class="w-[190px] rounded rounded-b-none border-orange border-b-[6px] bg-grey-200 p-1 flex flex-row">
                <div class="self-end">
                    <h3 class="text-xl font-medium">22.1 Million</h3>
                    <h3>Funding for fellows</h3>
                </div>
            </div>
            <div class="w-[190px] rounded rounded-b-none border-orange border-b-[6px] bg-grey-200 p-1 flex flex-row">
                <div class="self-end">
                    <h3 class="text-xl font-medium">@startupCount</h3>
                    <h3>Tracked startups</h3>
                </div>
            </div>
            <div class="w-[34px] rounded rounded-b-none rounded-r-none border-orange border-b-[6px] bg-grey-200 grid justify-center content-end	">
                <img class="mb-2 cursor-pointer" src="/icons/settings.png" />
            </div>
        </div>
    </div>
    <div class="grid grid-cols-[1fr_2fr_0.7fr] gap-x-4 mb-3">
        <div class="bg-white rounded border border-black">
            <FounderStartupOverviewComponent/>
        </div>
        <div class="bg-white rounded border border-black">

        </div>
        <div class="grid grid-rows-[1fr_180px] gap-y-4">
            <div class="bg-white rounded border border-black">

            </div>

            <div class="bg-white rounded border border-black p-2">
                <h3 class="mb-1.5 block text-md font-medium text-gray-900 dark:text-white">Manage your incubator</h3>

                <div class="flex flex-col gap-y-2 mt-4 self-start">
                    <div class="flex flex-row gap-x-3">
                        <button @onclick='() => OpenSignUpModal("guest")' class="flex-1 text-md hover:bg-orange border hover:text-white border-1 border-black cursor-pointer p-1 rounded" target="_blank" href="/swagger/index.html">
                            <span>Invite guest</span>
                        </button>
                        <button @onclick='() => OpenSignUpModal("admin")' class="flex-1 text-md hover:bg-orange hover:text-white border border-1 border-black cursor-pointer p-1 rounded" target="_blank" href="/swagger/index.html">
                            <span >Invite admin</span>
                        </button>
                    </div>
                    <button @onclick='() => OpenCreateStartupModal()' class="w-full text-md hover:bg-orange hover:text-white border border-1 border-black cursor-pointer p-1 rounded" target="_blank" href="/swagger/index.html">
                        <span>Add a startup</span>
                    </button>
                    <button @onclick='() => OpenSignUpModal("fellow")' class="w-full text-md text-white bg-orange hover:bg-white hover:text-orange hover:border-orange border border-1 border-black cursor-pointer p-1 rounded" target="_blank" href="/swagger/index.html">
                        <span >Invite fellow</span>
                    </button>        
                </div>

            </div>
        </div>
    </div>
</div>

@code {
    private IModalReference modalReference;
    private int fellowCount;
    private int startupCount;

    [CascadingParameter]
    public HubConnection HubConnection { get; set; }

    public void OpenSignUpModal(string type)
    {
        var modelParameters = new ModalParameters
        {
            { nameof(InviteMembersComponent.CancelRequestedCallback), new EventCallback(this, () => modalReference.Close()) },
            { nameof(InviteMembersComponent.InvitationType), type },

        };

        modalReference = modalService.Show<InviteMembersComponent>(string.Empty, modelParameters, DefaultModalOptions.Modal);
    }

    public void OpenCreateStartupModal()
    {
        var modelParameters = new ModalParameters
        {
            { nameof(CreateStartupModal.CancelRequestedCallback), new EventCallback(this, () => modalReference.Close()) },

        };

        modalReference = modalService.Show<CreateStartupModal>(string.Empty, modelParameters, DefaultModalOptions.Modal);
    }

    protected override async Task OnInitializedAsync()
    {
        fellowCount = await httpClientService.GetFromAPIAsync<int>("/founders/count");
        startupCount = await httpClientService.GetFromAPIAsync<int>("/startups/count");

        HubConnection.On("/NewStartup", async () =>
        {
            startupCount = await httpClientService.GetFromAPIAsync<int>("/startups/count");
            StateHasChanged();
        });
    }
}
